#include "Mapping.h"


D3D10_USAGE MappingBufferUsage[] =
{
	D3D10_USAGE_IMMUTABLE, //BUFFER_USAGE_IMMUTABLE
	D3D10_USAGE_DEFAULT,	//BUFFER_USAGE_STATIC
	D3D10_USAGE_DYNAMIC, //BUFFER_USAGE_DYNAMIC
	D3D10_USAGE_DYNAMIC, //BUFFER_USAGE_STREAM
};

UINT MappingCPUAccess [] = 
{
	0,
	0,
	D3D10_CPU_ACCESS_WRITE,
	D3D10_CPU_ACCESS_WRITE
};

D3D10_MAP MappingMapAccess[] =
{
	D3D10_MAP_READ,	//MAP_READ_ONLY
	D3D10_MAP_READ_WRITE,	//MAP_READ_AND_WRITE
	D3D10_MAP_WRITE_DISCARD,	//MAP_WRITE_INVALIDATE_ALL
	D3D10_MAP_WRITE_NO_OVERWRITE,	//MAP_WRITE_UNUSED_RANGE
	D3D10_MAP_WRITE_DISCARD,	//MAP_WRITE_ONLY
	D3D10_MAP_WRITE_DISCARD		//MAP_WRITE_INVALIDATE_RANGE
};

D3D10_BLEND MappingBlendFactor [] =
{
	D3D10_BLEND_ZERO,	//BS_ZERO,
	D3D10_BLEND_ONE,	//BS_ONE,
	D3D10_BLEND_SRC_COLOR,	//BS_SRC_COLOR,
	D3D10_BLEND_INV_SRC_COLOR,	//BS_INV_SRC_COLOR,
	D3D10_BLEND_SRC_ALPHA,	//BS_SRC_ALPHA,
	D3D10_BLEND_INV_SRC_ALPHA,	//BS_INV_SRC_ALPHA,
	D3D10_BLEND_DEST_ALPHA,	//BS_DEST_ALPHA,
	D3D10_BLEND_INV_DEST_ALPHA,	//BS_INV_DEST_ALPHA,
	D3D10_BLEND_DEST_COLOR,	//BS_DEST_COLOR,
	D3D10_BLEND_INV_DEST_COLOR,	//BS_INV_DEST_COLOR,
	D3D10_BLEND_SRC_ALPHA_SAT,	//BS_SRC_ALPHA_SATURATE,
	D3D10_BLEND_BLEND_FACTOR,	//BS_BLEND_FACTOR,
	D3D10_BLEND_INV_BLEND_FACTOR,	//BS_INV_BLEND_FACTOR,
	D3D10_BLEND_SRC1_COLOR,	//BS_SRC1_COLOR,
	D3D10_BLEND_INV_SRC1_COLOR,	//BS_INV_SRC1_COLOR,
	D3D10_BLEND_SRC1_ALPHA,	//BS_SRC1_ALPHA,
	D3D10_BLEND_INV_SRC1_ALPHA	//BS_INV_SRC1_ALPHA
};	

D3D10_BLEND_OP MappingBlendOp [] =
{
	D3D10_BLEND_OP_ADD,	//BS_FUNC_ADD
	D3D10_BLEND_OP_SUBTRACT,	//BS_FUNC_SUBTRACT
	D3D10_BLEND_OP_REV_SUBTRACT,	//BS_FUNC_REVERSE_SUBTRACT
	D3D10_BLEND_OP_MIN,	//BS_FUNC_MIN
	D3D10_BLEND_OP_MAX	//BS_FUNC_MAX
};

D3D10_STENCIL_OP MappingDSOperation [] =
{
	D3D10_STENCIL_OP_KEEP,	//DS_OP_KEEP,
	D3D10_STENCIL_OP_ZERO,	//DS_OP_ZERO,
	D3D10_STENCIL_OP_REPLACE,	//DS_OP_REPLACE,
	D3D10_STENCIL_OP_INCR_SAT,	//DS_OP_INCR_SATURATE,
	D3D10_STENCIL_OP_DECR_SAT,	//DS_OP_DECR_SATURATE,
	D3D10_STENCIL_OP_INVERT,	//DS_OP_INVERT,
	D3D10_STENCIL_OP_INCR,	//DS_OP_INCR_WRAP,
	D3D10_STENCIL_OP_DECR	//DS_OP_DECR_WRAP,
};

D3D10_COMPARISON_FUNC MappingComparisonMode [] =
{
	D3D10_COMPARISON_NEVER,	//COMPARE_NEVER,
	D3D10_COMPARISON_LESS,	//COMPARE_LESS,
	D3D10_COMPARISON_EQUAL,	//COMPARE_EQUAL,
	D3D10_COMPARISON_LESS_EQUAL,	//COMPARE_LEQUAL,
	D3D10_COMPARISON_GREATER,	//COMPARE_GREATER,
	D3D10_COMPARISON_NOT_EQUAL,	//COMPARE_NOTEQUAL,
	D3D10_COMPARISON_GREATER_EQUAL,	//COMPARE_GEQUAL,
	D3D10_COMPARISON_ALWAYS	//COMPARE_ALWAYS,
};

D3D10_FILL_MODE MappingRSFill [] =
{
	D3D10_FILL_WIREFRAME, //RS_FILL_WIREFRAME,
	D3D10_FILL_SOLID, //RS_FILL_SOLID,
};
D3D10_CULL_MODE MappingRSCull [] =
{
	D3D10_CULL_NONE, //RS_CULL_NONE,
	D3D10_CULL_FRONT, //RS_CULL_FRONT,
	D3D10_CULL_BACK, //RS_CULL_BACK,
};

D3D10_FILTER MappingSamplerFilter [] =
{
	D3D10_FILTER_MIN_MAG_MIP_POINT,			//FILTER_NEAREST_NEAREST_NEAREST,
	D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR,	//FILTER_NEAREST_NEAREST_LINEAR,
	D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT, //FILTER_NEAREST_LINEAR_NEAREST,
	D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR,	//FILTER_NEAREST_LINEAR_LINEAR,
	D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT,	//FILTER_LINEAR_NEAREST_NEAREST,
	D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,	//FILTER_LINEAR_NEAREST_LINEAR,
	D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT,	//FILTER_LINEAR_LINEAR_NEAREST,
	D3D10_FILTER_MIN_MAG_MIP_LINEAR,	//FILTER_LINEAR_LINEAR_LINEAR,
	D3D10_FILTER_ANISOTROPIC,			//FILTER_ANISOTROPIC,
	D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT,	//FILTER_COMP_NEAREST_NEAREST_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR,	//FILTER_COMP_NEAREST_NEAREST_LINEAR,
	D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,	//FILTER_COMP_NEAREST_LINEAR_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR,	//FILTER_COMP_NEAREST_LINEAR_LINEAR,
	D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,	//FILTER_COMP_LINEAR_NEAREST_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,	//FILTER_COMP_LINEAR_NEAREST_LINEAR,
	D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,	//FILTER_COMP_LINEAR_LINEAR_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_LINEAR,
	D3D10_FILTER_COMPARISON_ANISOTROPIC		//FILTER_COMP_ANISOTROPIC,
};

D3D10_TEXTURE_ADDRESS_MODE MappingSamplerEdge [] =
{
	D3D10_TEXTURE_ADDRESS_WRAP,		//SAMPLER_EDGE_WRAP,
	D3D10_TEXTURE_ADDRESS_MIRROR,	//SAMPLER_EDGE_MIRROR,
	D3D10_TEXTURE_ADDRESS_CLAMP,	//SAMPLER_EDGE_CLAMP,
	D3D10_TEXTURE_ADDRESS_BORDER	//SAMPLER_EDGE_BORDER,
};

D3D10_PRIMITIVE_TOPOLOGY MappingPrimitiveType [] =
{
	D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
	D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,
	D3D10_PRIMITIVE_TOPOLOGY_LINELIST
};

unsigned int MappingPrimitiveType_IndicesPerType[] =
{
	3,
	2
};