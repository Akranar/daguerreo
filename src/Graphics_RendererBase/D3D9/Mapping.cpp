#include "Mapping.h"

UINT MappingBufferUsage[] =
{
	D3DUSAGE_WRITEONLY, //BUFFER_USAGE_IMMUTABLE
	D3DUSAGE_WRITEONLY,	//BUFFER_USAGE_STATIC
	D3DUSAGE_DYNAMIC | D3DUSAGE_WRITEONLY, //BUFFER_USAGE_DYNAMIC
	D3DUSAGE_DYNAMIC | D3DUSAGE_WRITEONLY, //BUFFER_USAGE_STREAM
};

UINT MappingMapAccess[] =
{
	D3DLOCK_READONLY,	//MAP_READ_ONLY
	0,	//MAP_READ_AND_WRITE
	D3DLOCK_DISCARD,	//MAP_WRITE_INVALIDATE_ALL
	D3DLOCK_NOOVERWRITE,	//MAP_WRITE_UNUSED_RANGE
	0,	//MAP_WRITE_ONLY
	D3DLOCK_DISCARD		//MAP_WRITE_INVALIDATE_RANGE
};

UINT MappingBlendFactor [] =
{
	D3DBLEND_ZERO,	//BS_ZERO,
	D3DBLEND_ONE,	//BS_ONE,
	D3DBLEND_SRCCOLOR,	//BS_SRC_COLOR,
	D3DBLEND_INVSRCCOLOR,	//BS_INV_SRC_COLOR,
	D3DBLEND_SRCALPHA,	//BS_SRC_ALPHA,
	D3DBLEND_INVSRCALPHA,	//BS_INV_SRC_ALPHA,
	D3DBLEND_DESTALPHA,	//BS_DEST_ALPHA,
	D3DBLEND_INVDESTALPHA,	//BS_INV_DEST_ALPHA,
	D3DBLEND_DESTCOLOR,	//BS_DEST_COLOR,
	D3DBLEND_INVDESTCOLOR,	//BS_INV_DEST_COLOR,
	D3DBLEND_SRCALPHASAT,	//BS_SRC_ALPHA_SATURATE,
	D3DBLEND_BLENDFACTOR,	//BS_BLEND_FACTOR,
	D3DBLEND_INVBLENDFACTOR,	//BS_INV_BLEND_FACTOR,
	0,	//BS_SRC1_COLOR,
	0,	//BS_INV_SRC1_COLOR,
	0,	//BS_SRC1_ALPHA,
	0	//BS_INV_SRC1_ALPHA
};	


UINT MappingBlendOp [] =
{
	D3DBLENDOP_ADD,	//BS_FUNC_ADD
	D3DBLENDOP_SUBTRACT,	//BS_FUNC_SUBTRACT
	D3DBLENDOP_REVSUBTRACT,	//BS_FUNC_REVERSE_SUBTRACT
	D3DBLENDOP_MIN,	//BS_FUNC_MIN
	D3DBLENDOP_MAX	//BS_FUNC_MAX
};

UINT MappingDSOperation [] =
{
	D3DSTENCILOP_KEEP,	//DS_OP_KEEP,
	D3DSTENCILOP_ZERO,	//DS_OP_ZERO,
	D3DSTENCILOP_REPLACE,	//DS_OP_REPLACE,
	D3DSTENCILOP_INCRSAT,	//DS_OP_INCR_SATURATE,
	D3DSTENCILOP_DECRSAT,	//DS_OP_DECR_SATURATE,
	D3DSTENCILOP_INVERT,	//DS_OP_INVERT,
	D3DSTENCILOP_INCR,	//DS_OP_INCR_WRAP,
	D3DSTENCILOP_DECR	//DS_OP_DECR_WRAP,
};

UINT MappingComparisonMode [] =
{
	D3DCMP_NEVER,	//COMPARE_NEVER,
	D3DCMP_LESS,	//COMPARE_LESS,
	D3DCMP_EQUAL,	//COMPARE_EQUAL,
	D3DCMP_LESSEQUAL,	//COMPARE_LEQUAL,
	D3DCMP_GREATER,	//COMPARE_GREATER,
	D3DCMP_NOTEQUAL,	//COMPARE_NOTEQUAL,
	D3DCMP_GREATEREQUAL,	//COMPARE_GEQUAL,
	D3DCMP_ALWAYS	//COMPARE_ALWAYS,
};

UINT MappingRSFill [] =
{
	D3DFILL_WIREFRAME, //RS_FILL_WIREFRAME,
	D3DFILL_SOLID, //RS_FILL_SOLID,
};
UINT MappingRSCull_FrontCCW [] =
{
	D3DCULL_NONE, //RS_CULL_NONE,
	D3DCULL_CCW, //RS_CULL_FRONT,
	D3DCULL_CW, //RS_CULL_BACK,
};

UINT MappingRSCull_FrontCW [] =
{
	D3DCULL_NONE, //RS_CULL_NONE,
	D3DCULL_CW, //RS_CULL_FRONT,
	D3DCULL_CCW, //RS_CULL_BACK,
};

UINT MappingSamplerEdge [] =
{
	D3DTADDRESS_WRAP,		//SAMPLER_EDGE_WRAP,
	D3DTADDRESS_MIRROR,	//SAMPLER_EDGE_MIRROR,
	D3DTADDRESS_CLAMP,	//SAMPLER_EDGE_CLAMP,
	D3DTADDRESS_BORDER	//SAMPLER_EDGE_BORDER,
};

/*
UINT MappingSamplerFilter [] =
{
	D3D10_FILTER_MIN_MAG_MIP_POINT,			//FILTER_NEAREST_NEAREST_NEAREST,
	D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR,	//FILTER_NEAREST_NEAREST_LINEAR,
	D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT, //FILTER_LINEAR_NEAREST_NEAREST,
	D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR,	//FILTER_LINEAR_NEAREST_LINEAR,
	D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT,	//FILTER_NEAREST_LINEAR_NEAREST,
	D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,	//FILTER_NEAREST_LINEAR_LINEAR,
	D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT,	//FILTER_LINEAR_LINEAR_NEAREST,
	D3D10_FILTER_MIN_MAG_MIP_LINEAR,	//FILTER_LINEAR_LINEAR_LINEAR,
	D3D10_FILTER_ANISOTROPIC,			//FILTER_ANISOTROPIC,
	D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT,	//FILTER_COMP_NEAREST_NEAREST_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR,	//FILTER_COMP_NEAREST_NEAREST_LINEAR,
	D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,	//FILTER_COMP_LINEAR_NEAREST_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR,	//FILTER_COMP_LINEAR_NEAREST_LINEAR,
	D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,	//FILTER_COMP_NEAREST_LINEAR_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,	//FILTER_COMP_NEAREST_LINEAR_LINEAR,
	D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,	//FILTER_COMP_LINEAR_LINEAR_NEAREST,
	D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_LINEAR,
	D3D10_FILTER_COMPARISON_ANISOTROPIC		//FILTER_COMP_ANISOTROPIC,
};
*/

//MIN, MAG, MIP
UINT MappingSamplerFilter_MIN [] =
{
	D3DTEXF_POINT,			//FILTER_NEAREST_NEAREST_NEAREST,
	D3DTEXF_POINT,	//FILTER_NEAREST_NEAREST_LINEAR,
	D3DTEXF_POINT, //FILTER_NEAREST_LINEAR_NEAREST,
	D3DTEXF_POINT,	//FILTER_NEAREST_LINEAR_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_NEAREST_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_NEAREST_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_LINEAR_LINEAR,
	D3DTEXF_ANISOTROPIC,			//FILTER_ANISOTROPIC,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_NEAREST_NEAREST,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_NEAREST_LINEAR,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_LINEAR_NEAREST,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_LINEAR_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_NEAREST_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_NEAREST_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_LINEAR,
	D3DTEXF_ANISOTROPIC		//FILTER_COMP_ANISOTROPIC,
};

UINT MappingSamplerFilter_MAG [] =
{
	D3DTEXF_POINT,			//FILTER_NEAREST_NEAREST_NEAREST,
	D3DTEXF_POINT,	//FILTER_NEAREST_NEAREST_LINEAR,
	D3DTEXF_LINEAR, //FILTER_NEAREST_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_NEAREST_LINEAR_LINEAR,
	D3DTEXF_POINT,	//FILTER_LINEAR_NEAREST_NEAREST,
	D3DTEXF_POINT,	//FILTER_LINEAR_NEAREST_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_LINEAR_LINEAR,
	D3DTEXF_ANISOTROPIC,			//FILTER_ANISOTROPIC,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_NEAREST_NEAREST,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_NEAREST_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_COMP_NEAREST_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_NEAREST_LINEAR_LINEAR,
	D3DTEXF_POINT,	//FILTER_COMP_LINEAR_NEAREST_NEAREST,
	D3DTEXF_POINT,	//FILTER_COMP_LINEAR_NEAREST_LINEAR,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_LINEAR,
	D3DTEXF_ANISOTROPIC		//FILTER_COMP_ANISOTROPIC,
};

UINT MappingSamplerFilter_MIP [] =
{
	D3DTEXF_POINT,			//FILTER_NEAREST_NEAREST_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_NEAREST_NEAREST_LINEAR,
	D3DTEXF_POINT, //FILTER_NEAREST_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_NEAREST_LINEAR_LINEAR,
	D3DTEXF_POINT,	//FILTER_LINEAR_NEAREST_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_POINT_LINEAR,
	D3DTEXF_POINT,	//FILTER_LINEAR_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_LINEAR_LINEAR_LINEAR,
	D3DTEXF_ANISOTROPIC,			//FILTER_ANISOTROPIC,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_NEAREST_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_NEAREST_NEAREST_LINEAR,
	D3DTEXF_POINT,	//FILTER_COMP_NEAREST_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_NEAREST_LINEAR_LINEAR,
	D3DTEXF_POINT,	//FILTER_COMP_LINEAR_NEAREST_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_NEAREST_LINEAR,
	D3DTEXF_POINT,	//FILTER_COMP_LINEAR_LINEAR_NEAREST,
	D3DTEXF_LINEAR,	//FILTER_COMP_LINEAR_LINEAR_LINEAR,
	D3DTEXF_ANISOTROPIC		//FILTER_COMP_ANISOTROPIC,
};