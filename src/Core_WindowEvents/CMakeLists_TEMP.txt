cmake_minimum_required(VERSION 2.8)

PROJECT( Core_WindowEvents )
SET(WindowEvents_SRCS)
IF(WIN32)
    IF (USE_DIRECTX10)
        FILE(GLOB WindowEvents_SRCS DirectX10/*.cpp DirectX10/*.h) 
        FIND_PACKAGE(OpenGL)
        SET(EXTRA_LIBS ${OPENGL_LIBRARIES})
    ELSE (USE_DIRECTX10)
        FILE(GLOB WindowEvents_SRCS Windows/*.cpp Windows/*.h) 
        FIND_PACKAGE(OpenGL)
        SET(EXTRA_LIBS ${OPENGL_LIBRARIES})
    ENDIF (USE_DIRECTX10)
ELSE(WIN32)
    IF(APPLE)
        FILE(GLOB WindowEvents_SRCS MacOSX/*.mm) 
        SET(GUI_TYPE MACOSX_BUNDLE)
        FIND_LIBRARY(COCOA_LIBRARY Cocoa)
        FIND_LIBRARY(OPENGL_LIBRARY OpenGL)
        MARK_AS_ADVANCED (COCOA_LIBRARY OPENGL_LIBRARY)
        SET(EXTRA_LIBS ${COCOA_LIBRARY} ${OPENGL_LIBRARY})
    ELSE(APPLE)
        FILE(GLOB WindowEvents_SRCS Linux/*.cpp)
        SET(EXTRA_LIBS GL X11 GLU)
    ENDIF (APPLE)
ENDIF(WIN32)

FILE(GLOB InputHandling_SRCS *.cpp)
SET(WindowEvents_SRCS ${WindowEvents_SRCS} ${InputHandling_SRCS})

FILE(GLOB WindowEvents_HEADERS *.h)
IF(WIN32)
	SET(WindowEvents_SRCS ${WindowEvents_SRCS} ${WindowEvents_HEADERS})
ENDIF(WIN32)

ADD_LIBRARY(Core_WindowEvents STATIC ${WindowEvents_SRCS})
TARGET_LINK_LIBRARIES( Core_WindowEvents ${EXTRA_LIBS} ) 

